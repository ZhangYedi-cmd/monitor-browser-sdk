class t{constructor(){this.dep=new Map}watch(t,e){let r=this.dep.get(t);r?this.dep.set(t,r.concat(e)):this.dep.set(t,[e])}notify(t,e){let r=this.dep.get(t);r&&r.length&&r.map((t=>t(e)))}}var e=Object.defineProperty,r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,n=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o;class s{constructor(t){this.options=t}use(e){let s=new t;e.map((t=>{t.monitor.call(this,s.notify.bind(s,t.name));s.watch(t.name,((...e)=>{t.transform(((t,e)=>{for(var s in e||(e={}))o.call(e,s)&&n(t,s,e[s]);if(r)for(var s of r(e))a.call(e,s)&&n(t,s,e[s]);return t})({},e))}))}))}}export{s as Core};
